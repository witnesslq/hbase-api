---
# Purpose: Signs the TLS/SSL certificates of each server
#
# Notes: 
#   - Executed on all master and slave server 
#   - This is part III of a three step process:
#     Phase 1) Generate all certs, keystores, and CSRs for every server and process
#     Phase 2) Sign all CSRs with the central CA root certificate
#     Phase 3) Import all signed CSRs and put shared truststore in place

- name: Copy signed certificates
  copy: 
    src=files/tmp/certs/{{ inventory_hostname }}-{{ item.owner }}.crt
    dest={{ CONFIG_BASE }}/{{ item.path }}/conf/{{item.owner }}.crt
    owner={{ item.owner }}
    group=hadoop
    mode=440
  with_items: "{{ SSL_SERVICES }}"

- name: Copy public CA root certificate
  copy: 
    src=files/tmp/certs/rootCA.pem 
    dest={{ CONFIG_BASE }}/{{ item.path }}/conf/
    owner={{ item.owner }}
    group=hadoop 
    mode=440
  with_items: "{{ SSL_SERVICES }}"

- name: Copy shared truststore
  copy: 
    src=files/tmp/certs/truststore.jks 
    dest={{ CONFIG_BASE }}/{{ item.path }}/conf/ 
    owner={{ item.owner }} 
    group=hadoop 
    mode=440
  with_items: "{{ SSL_SERVICES }}"

- name: Import root CA certificate into keystores
  command: /{{ JAVA_HOME }}/bin/keytool -importcert -keystore {{ inventory_hostname }}-{{ item.owner }}.jks -alias CARoot -storepass "{{ SSL_STORE_PASSWORD }}" -keypass "{{ SSL_KEY_PASSWORD }}" -file rootCA.pem -noprompt
  args:
    chdir: /{{ CONFIG_BASE }}/{{ item.path }}/conf/
  with_items: "{{ SSL_SERVICES }}"

- name: Import signed certificate into keystores
  command: /{{ JAVA_HOME }}/bin/keytool -importcert -keystore {{ inventory_hostname }}-{{ item.owner }}.jks -alias {{ inventory_hostname }} -storepass "{{ SSL_STORE_PASSWORD }}" -keypass "{{ SSL_KEY_PASSWORD }}" -file {{ inventory_hostname }}-{{ item.owner }}.crt -noprompt
  args:
    chdir: /{{ CONFIG_BASE }}/{{ item.path }}/conf/
  with_items: "{{ SSL_SERVICES }}"

# Note: We could either add the real name into the ssl-server.xml/ss-client.xml or use the below approach
- name: Copy local keystore
  copy: 
    src={{ CONFIG_BASE }}/{{ item.path }}/conf/{{ inventory_hostname }}-{{ item.owner }}.jks 
    dest={{ CONFIG_BASE }}/{{ item.path }}/conf/keystore.jks 
    owner={{ item.owner }} 
    group=hadoop 
    mode=440
    remote_src=yes
  with_items: "{{ SSL_SERVICES }}"

# Optionally swap in cacerts with self-signed root CA certificate
# - command: rm -rf {{ java_home }}/jre/lib/security/jssecacert
# - command: cp {{ JAVA_HOME }}/jre/lib/security/cacerts {{ JAVA_HOME }}/jre/lib/security/jssecacerts
# - command: /{{ JAVA_HOME }}/bin/keytool -importcert -keystore {{ JAVA_HOME }}/jre/lib/security/jssecacerts -alias CA -storepass changeit -file rootCA.pem -noprompt
#   args:
#     chdir: /{{ CONFIG_BASE }}/{{ item.path }}/conf/
#   with_items: "{{ SSL_SERVICES }}"
   
